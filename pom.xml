<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<parent>
		<groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-starter-parent</artifactId>
	    <version>2.1.13.RELEASE</version>
	    <relativePath/>
	</parent>
	
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.yumu</groupId>
	<artifactId>hexie-parent</artifactId>
	<version>2.0</version>
	<packaging>pom</packaging>
	<properties>
		<java.version>1.8</java.version>
		<spring-boot.version>2.1.13.RELEASE</spring-boot.version>
		<qiniu-sdk.version>6.1.9</qiniu-sdk.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
	</properties>

	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>
	
	<profiles>
		<!-- 本地开发 -->
		<profile>
			<!-- profile的id -->
			<id>dev</id>
			<properties>
				<!-- 此处的jastar.env可以自定义，其他地方可以使用${jastar.env}来引用此属性 -->
				<profileActive>dev</profileActive>
			</properties>
			<activation>
				<!-- 默认激活此配置 -->
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<!-- 测试 -->
		<profile>
			<id>test</id>
			<properties>
				<profileActive>test</profileActive>
			</properties>
		</profile>
		<!-- uat -->
		<profile>
			<id>uat</id>
			<properties>
				<profileActive>uat</profileActive>
			</properties>
		</profile>
		<!-- 生产 -->
		<profile>
			<id>prd</id>
			<properties>
				<profileActive>prod</profileActive>
			</properties>
		</profile>

		<!-- 腾讯云测试环境 -->
		<profile>
			<id>ttest</id>
			<properties>
				<profileActive>ttest</profileActive>
			</properties>
		</profile>

		<!-- 腾讯云环境 -->
		<profile>
			<id>tprod</id>
			<properties>
				<profileActive>tprod</profileActive>
			</properties>
		</profile>
		
		<!-- 延吉环境 -->
		<profile>
			<id>yanji</id>
			<properties>
				<profileActive>yanji</profileActive>
			</properties>
		</profile>
	</profiles>

	<build>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<skipTests>true</skipTests>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<configuration>
						<failOnMissingWebXml>false</failOnMissingWebXml>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<executions>
						<execution>
							<id>install</id>
							<phase>install</phase>
							<goals>
								<goal>sources</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>aspectj-maven-plugin</artifactId>
					<dependencies>
						<dependency>
							<groupId>org.aspectj</groupId>
							<artifactId>aspectjrt</artifactId>
							<version>${org.aspectj-version}</version>
						</dependency>
						<dependency>
							<groupId>org.aspectj</groupId>
							<artifactId>aspectjtools</artifactId>
							<version>${org.aspectj-version}</version>
						</dependency>
					</dependencies>
					<executions>
						<execution>
							<goals>
								<goal>compile</goal>
								<goal>test-compile</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<outxml>true</outxml>
						<source>${java-version}</source>
						<target>${java-version}</target>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<configuration>
						<executable>true</executable>
					</configuration>
				</plugin>
				
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
	
					<executions>
						<execution>
							<id>copy-resources</id>
							<phase>compile</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<!-- 覆盖原有文件 -->
								<overwrite>true</overwrite>
								<!-- 也可以用下面这样的方式（指定相对url的方式指定outputDirectory） 
								 -->
								<outputDirectory>${basedir}/target/classes</outputDirectory>
								<!-- 待处理的资源定义 -->
								<resources>
									<resource>
										<!-- 指定resources插件处理哪个目录下的资源文件 -->
										<directory>src/main/resources/env/${profileActive}</directory>
										<filtering>true</filtering>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				
			</plugins>
		</pluginManagement>
	</build>
	<modules>
		<module>common</module>
		<module>hexie</module>
		<module>hexiebk</module>
	</modules>
</project>